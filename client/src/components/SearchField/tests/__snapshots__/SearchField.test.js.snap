// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchField should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchField
    clearQuery={[Function]}
    setQuery={[Function]}
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="searchContainer"
        >
          <Input
            className="searchField"
            icon="search"
            onChange={[Function]}
            onKeyPress={[Function]}
            placeholder="Type a value to search for"
            type="text"
            value=""
          />
        </div>,
        <div
          className="searchButton"
        >
          <Button
            as="button"
            onClick={[Function]}
            role="button"
          >
            Search
            <Icon
              as="i"
              name="angle right"
            />
          </Button>
        </div>,
      ],
      "className": "container",
      "data-component": "SearchField",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Input
            className="searchField"
            icon="search"
            onChange={[Function]}
            onKeyPress={[Function]}
            placeholder="Type a value to search for"
            type="text"
            value=""
          />,
          "className": "searchContainer",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "searchField",
            "icon": "search",
            "onChange": [Function],
            "onKeyPress": [Function],
            "placeholder": "Type a value to search for",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Button
            as="button"
            onClick={[Function]}
            role="button"
          >
            Search
            <Icon
              as="i"
              name="angle right"
            />
          </Button>,
          "className": "searchButton",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "button",
            "children": Array [
              "Search",
              <Icon
                as="i"
                name="angle right"
              />,
            ],
            "onClick": [Function],
            "role": "button",
          },
          "ref": null,
          "rendered": Array [
            "Search",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": "i",
                "name": "angle right",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="searchContainer"
          >
            <Input
              className="searchField"
              icon="search"
              onChange={[Function]}
              onKeyPress={[Function]}
              placeholder="Type a value to search for"
              type="text"
              value=""
            />
          </div>,
          <div
            className="searchButton"
          >
            <Button
              as="button"
              onClick={[Function]}
              role="button"
            >
              Search
              <Icon
                as="i"
                name="angle right"
              />
            </Button>
          </div>,
        ],
        "className": "container",
        "data-component": "SearchField",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Input
              className="searchField"
              icon="search"
              onChange={[Function]}
              onKeyPress={[Function]}
              placeholder="Type a value to search for"
              type="text"
              value=""
            />,
            "className": "searchContainer",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "searchField",
              "icon": "search",
              "onChange": [Function],
              "onKeyPress": [Function],
              "placeholder": "Type a value to search for",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Button
              as="button"
              onClick={[Function]}
              role="button"
            >
              Search
              <Icon
                as="i"
                name="angle right"
              />
            </Button>,
            "className": "searchButton",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "button",
              "children": Array [
                "Search",
                <Icon
                  as="i"
                  name="angle right"
                />,
              ],
              "onClick": [Function],
              "role": "button",
            },
            "ref": null,
            "rendered": Array [
              "Search",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "i",
                  "name": "angle right",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
