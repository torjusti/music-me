// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SidePanel /> should render SidePanel correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SidePanel
    genres={
      Object {
        "availableGenres": Array [
          "test1",
          "test2",
        ],
        "selectedGenres": Array [
          "test1",
        ],
      }
    }
    selectedRating={3}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="ui header"
        >
          Filter menu
        </h1>,
        <div
          className="controlsCont"
        >
          <Label>
            <Icon
              as="i"
              name="star"
            />
            Filter by rating
          </Label>
          <ComponentEnhancer(undefined)
            activeDotStyle={Object {}}
            className=""
            disabled={false}
            dotStyle={Object {}}
            dots={false}
            handle={[Function]}
            handleStyle={
              Array [
                Object {},
              ]
            }
            included={true}
            marks={
              Object {
                "1": "1",
                "2": "2",
                "3": "3",
                "4": "4",
                "5": "5",
              }
            }
            max={5}
            min={1}
            onAfterChange={[Function]}
            onBeforeChange={[Function]}
            onChange={[Function]}
            prefixCls="rc-slider"
            railStyle={Object {}}
            step={1}
            trackStyle={
              Array [
                Object {},
              ]
            }
            vertical={false}
          />
        </div>,
        <div
          className="controlsCont"
        >
          <Label>
            <Icon
              as="i"
              name="music"
            />
            Filter by genre
          </Label>
          <ul
            className="noDecoration"
          >
            <li>
              <div
                className="ui checkbox"
              >
                <input
                  checked={false}
                  onChange={[Function]}
                  type="checkbox"
                />
                <label />
              </div>
            </li>
            <li>
              <div
                className="ui checkbox"
              >
                <input
                  checked={false}
                  onChange={[Function]}
                  type="checkbox"
                />
                <label />
              </div>
            </li>
          </ul>
        </div>,
      ],
      "className": "controls",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Filter menu",
          "className": "ui header",
        },
        "ref": null,
        "rendered": "Filter menu",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Label>
              <Icon
                as="i"
                name="star"
              />
              Filter by rating
            </Label>,
            <ComponentEnhancer(undefined)
              activeDotStyle={Object {}}
              className=""
              disabled={false}
              dotStyle={Object {}}
              dots={false}
              handle={[Function]}
              handleStyle={
                Array [
                  Object {},
                ]
              }
              included={true}
              marks={
                Object {
                  "1": "1",
                  "2": "2",
                  "3": "3",
                  "4": "4",
                  "5": "5",
                }
              }
              max={5}
              min={1}
              onAfterChange={[Function]}
              onBeforeChange={[Function]}
              onChange={[Function]}
              prefixCls="rc-slider"
              railStyle={Object {}}
              step={1}
              trackStyle={
                Array [
                  Object {},
                ]
              }
              vertical={false}
            />,
          ],
          "className": "controlsCont",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Icon
                  as="i"
                  name="star"
                />,
                "Filter by rating",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "i",
                  "name": "star",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "Filter by rating",
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeDotStyle": Object {},
              "className": "",
              "disabled": false,
              "dotStyle": Object {},
              "dots": false,
              "handle": [Function],
              "handleStyle": Array [
                Object {},
              ],
              "included": true,
              "marks": Object {
                "1": "1",
                "2": "2",
                "3": "3",
                "4": "4",
                "5": "5",
              },
              "max": 5,
              "min": 1,
              "onAfterChange": [Function],
              "onBeforeChange": [Function],
              "onChange": [Function],
              "prefixCls": "rc-slider",
              "railStyle": Object {},
              "step": 1,
              "trackStyle": Array [
                Object {},
              ],
              "value": undefined,
              "vertical": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Label>
              <Icon
                as="i"
                name="music"
              />
              Filter by genre
            </Label>,
            <ul
              className="noDecoration"
            >
              <li>
                <div
                  className="ui checkbox"
                >
                  <input
                    checked={false}
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <label />
                </div>
              </li>
              <li>
                <div
                  className="ui checkbox"
                >
                  <input
                    checked={false}
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <label />
                </div>
              </li>
            </ul>,
          ],
          "className": "controlsCont",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Icon
                  as="i"
                  name="music"
                />,
                "Filter by genre",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "i",
                  "name": "music",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "Filter by genre",
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                undefined,
                Array [
                  <li>
                    <div
                      className="ui checkbox"
                    >
                      <input
                        checked={false}
                        onChange={[Function]}
                        type="checkbox"
                      />
                      <label />
                    </div>
                  </li>,
                  <li>
                    <div
                      className="ui checkbox"
                    >
                      <input
                        checked={false}
                        onChange={[Function]}
                        type="checkbox"
                      />
                      <label />
                    </div>
                  </li>,
                ],
              ],
              "className": "noDecoration",
            },
            "ref": null,
            "rendered": Array [
              undefined,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="ui checkbox"
                  >
                    <input
                      checked={false}
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label />
                  </div>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <input
                        checked={false}
                        onChange={[Function]}
                        type="checkbox"
                      />,
                      <label />,
                    ],
                    "className": "ui checkbox",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "checked": false,
                        "onChange": [Function],
                        "type": "checkbox",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "label",
                    },
                  ],
                  "type": "div",
                },
                "type": "li",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="ui checkbox"
                  >
                    <input
                      checked={false}
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label />
                  </div>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <input
                        checked={false}
                        onChange={[Function]}
                        type="checkbox"
                      />,
                      <label />,
                    ],
                    "className": "ui checkbox",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "checked": false,
                        "onChange": [Function],
                        "type": "checkbox",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "label",
                    },
                  ],
                  "type": "div",
                },
                "type": "li",
              },
            ],
            "type": "ul",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="ui header"
          >
            Filter menu
          </h1>,
          <div
            className="controlsCont"
          >
            <Label>
              <Icon
                as="i"
                name="star"
              />
              Filter by rating
            </Label>
            <ComponentEnhancer(undefined)
              activeDotStyle={Object {}}
              className=""
              disabled={false}
              dotStyle={Object {}}
              dots={false}
              handle={[Function]}
              handleStyle={
                Array [
                  Object {},
                ]
              }
              included={true}
              marks={
                Object {
                  "1": "1",
                  "2": "2",
                  "3": "3",
                  "4": "4",
                  "5": "5",
                }
              }
              max={5}
              min={1}
              onAfterChange={[Function]}
              onBeforeChange={[Function]}
              onChange={[Function]}
              prefixCls="rc-slider"
              railStyle={Object {}}
              step={1}
              trackStyle={
                Array [
                  Object {},
                ]
              }
              vertical={false}
            />
          </div>,
          <div
            className="controlsCont"
          >
            <Label>
              <Icon
                as="i"
                name="music"
              />
              Filter by genre
            </Label>
            <ul
              className="noDecoration"
            >
              <li>
                <div
                  className="ui checkbox"
                >
                  <input
                    checked={false}
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <label />
                </div>
              </li>
              <li>
                <div
                  className="ui checkbox"
                >
                  <input
                    checked={false}
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <label />
                </div>
              </li>
            </ul>
          </div>,
        ],
        "className": "controls",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Filter menu",
            "className": "ui header",
          },
          "ref": null,
          "rendered": "Filter menu",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Label>
                <Icon
                  as="i"
                  name="star"
                />
                Filter by rating
              </Label>,
              <ComponentEnhancer(undefined)
                activeDotStyle={Object {}}
                className=""
                disabled={false}
                dotStyle={Object {}}
                dots={false}
                handle={[Function]}
                handleStyle={
                  Array [
                    Object {},
                  ]
                }
                included={true}
                marks={
                  Object {
                    "1": "1",
                    "2": "2",
                    "3": "3",
                    "4": "4",
                    "5": "5",
                  }
                }
                max={5}
                min={1}
                onAfterChange={[Function]}
                onBeforeChange={[Function]}
                onChange={[Function]}
                prefixCls="rc-slider"
                railStyle={Object {}}
                step={1}
                trackStyle={
                  Array [
                    Object {},
                  ]
                }
                vertical={false}
              />,
            ],
            "className": "controlsCont",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Icon
                    as="i"
                    name="star"
                  />,
                  "Filter by rating",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "i",
                    "name": "star",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "Filter by rating",
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "activeDotStyle": Object {},
                "className": "",
                "disabled": false,
                "dotStyle": Object {},
                "dots": false,
                "handle": [Function],
                "handleStyle": Array [
                  Object {},
                ],
                "included": true,
                "marks": Object {
                  "1": "1",
                  "2": "2",
                  "3": "3",
                  "4": "4",
                  "5": "5",
                },
                "max": 5,
                "min": 1,
                "onAfterChange": [Function],
                "onBeforeChange": [Function],
                "onChange": [Function],
                "prefixCls": "rc-slider",
                "railStyle": Object {},
                "step": 1,
                "trackStyle": Array [
                  Object {},
                ],
                "value": undefined,
                "vertical": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Label>
                <Icon
                  as="i"
                  name="music"
                />
                Filter by genre
              </Label>,
              <ul
                className="noDecoration"
              >
                <li>
                  <div
                    className="ui checkbox"
                  >
                    <input
                      checked={false}
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label />
                  </div>
                </li>
                <li>
                  <div
                    className="ui checkbox"
                  >
                    <input
                      checked={false}
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label />
                  </div>
                </li>
              </ul>,
            ],
            "className": "controlsCont",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Icon
                    as="i"
                    name="music"
                  />,
                  "Filter by genre",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "i",
                    "name": "music",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "Filter by genre",
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  undefined,
                  Array [
                    <li>
                      <div
                        className="ui checkbox"
                      >
                        <input
                          checked={false}
                          onChange={[Function]}
                          type="checkbox"
                        />
                        <label />
                      </div>
                    </li>,
                    <li>
                      <div
                        className="ui checkbox"
                      >
                        <input
                          checked={false}
                          onChange={[Function]}
                          type="checkbox"
                        />
                        <label />
                      </div>
                    </li>,
                  ],
                ],
                "className": "noDecoration",
              },
              "ref": null,
              "rendered": Array [
                undefined,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="ui checkbox"
                    >
                      <input
                        checked={false}
                        onChange={[Function]}
                        type="checkbox"
                      />
                      <label />
                    </div>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <input
                          checked={false}
                          onChange={[Function]}
                          type="checkbox"
                        />,
                        <label />,
                      ],
                      "className": "ui checkbox",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "checked": false,
                          "onChange": [Function],
                          "type": "checkbox",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "input",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": undefined,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "label",
                      },
                    ],
                    "type": "div",
                  },
                  "type": "li",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="ui checkbox"
                    >
                      <input
                        checked={false}
                        onChange={[Function]}
                        type="checkbox"
                      />
                      <label />
                    </div>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <input
                          checked={false}
                          onChange={[Function]}
                          type="checkbox"
                        />,
                        <label />,
                      ],
                      "className": "ui checkbox",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "checked": false,
                          "onChange": [Function],
                          "type": "checkbox",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "input",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": undefined,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "label",
                      },
                    ],
                    "type": "div",
                  },
                  "type": "li",
                },
              ],
              "type": "ul",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
