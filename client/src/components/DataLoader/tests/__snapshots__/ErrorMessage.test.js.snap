// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ErrorMessage should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ErrorMessage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <MessageHeader>
          Error loading data
        </MessageHeader>,
        <p>
          An error occurred while loading data from the server.
        </p>,
        <Button
          as="button"
          color="blue"
          content="Try again"
          role="button"
        />,
      ],
      "negative": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Error loading data",
        },
        "ref": null,
        "rendered": "Error loading data",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "An error occurred while loading data from the server.",
        },
        "ref": null,
        "rendered": "An error occurred while loading data from the server.",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": "button",
          "color": "blue",
          "content": "Try again",
          "onClick": undefined,
          "role": "button",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <MessageHeader>
            Error loading data
          </MessageHeader>,
          <p>
            An error occurred while loading data from the server.
          </p>,
          <Button
            as="button"
            color="blue"
            content="Try again"
            role="button"
          />,
        ],
        "negative": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Error loading data",
          },
          "ref": null,
          "rendered": "Error loading data",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "An error occurred while loading data from the server.",
          },
          "ref": null,
          "rendered": "An error occurred while loading data from the server.",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "button",
            "color": "blue",
            "content": "Try again",
            "onClick": undefined,
            "role": "button",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
