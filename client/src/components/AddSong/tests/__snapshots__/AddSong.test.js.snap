// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddSong renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddSong />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Button
          as="button"
          color="blue"
          content="Add song"
          data-component="AddEditButton"
          onClick={[Function]}
          role="button"
        />,
        <AddSongForm
          onClose={[Function]}
          onSubmit={[Function]}
          open={false}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": "button",
          "color": "blue",
          "content": "Add song",
          "data-component": "AddEditButton",
          "inverted": undefined,
          "onClick": [Function],
          "role": "button",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "onClose": [Function],
          "onSubmit": [Function],
          "open": false,
          "song": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Button
            as="button"
            color="blue"
            content="Add song"
            data-component="AddEditButton"
            onClick={[Function]}
            role="button"
          />,
          <AddSongForm
            onClose={[Function]}
            onSubmit={[Function]}
            open={false}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "button",
            "color": "blue",
            "content": "Add song",
            "data-component": "AddEditButton",
            "inverted": undefined,
            "onClick": [Function],
            "role": "button",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onClose": [Function],
            "onSubmit": [Function],
            "open": false,
            "song": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
