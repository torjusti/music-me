// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddSongForm renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddSongForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "centered": true,
      "children": Array [
        <Header
          content="Add song"
        />,
        <ModalContent>
          <Form
            as="form"
            error={false}
          >
            <Message
              content="Please fill in all required fields before submitting the form again."
              error={true}
              header="Unable to add song"
            />
            <FormField
              control={[Function]}
              label="Rating"
              onClick={[Function]}
            />
            <FormInput
              as={[Function]}
              control={[Function]}
              error={false}
              fluid={true}
              label="Title"
              maxLength={100}
              onChange={[Function]}
              placeholder="Title"
              required={true}
              value=""
            />
            <FormInput
              as={[Function]}
              control={[Function]}
              error={false}
              fluid={true}
              label="Artist"
              maxLength={100}
              onChange={[Function]}
              placeholder="Artist"
              required={true}
              value=""
            />
            <FormInput
              as={[Function]}
              control={[Function]}
              error={false}
              fluid={true}
              label="Album"
              maxLength={100}
              onChange={[Function]}
              placeholder="Album"
              required={true}
              value=""
            />
            <FormInput
              as={[Function]}
              control={[Function]}
              error={false}
              fluid={true}
              label="Genre"
              maxLength={100}
              onChange={[Function]}
              placeholder="Genre"
              required={true}
              value=""
            />
            <FormTextArea
              as={[Function]}
              control={[Function]}
              error={false}
              label="Description"
              onChange={[Function]}
              placeholder="Description"
              required={true}
              value=""
            />
          </Form>
        </ModalContent>,
        <ModalActions>
          <Button
            as="button"
            color="red"
            content="Cancel"
            role="button"
          />
          <Button
            as="button"
            color="blue"
            content="Save"
            onClick={[Function]}
            role="button"
          />
        </ModalActions>,
      ],
      "closeOnDimmerClick": true,
      "closeOnDocumentClick": false,
      "dimmer": true,
      "eventPool": "Modal",
      "onClose": undefined,
      "open": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "content": "Add song",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Form
            as="form"
            error={false}
          >
            <Message
              content="Please fill in all required fields before submitting the form again."
              error={true}
              header="Unable to add song"
            />
            <FormField
              control={[Function]}
              label="Rating"
              onClick={[Function]}
            />
            <FormInput
              as={[Function]}
              control={[Function]}
              error={false}
              fluid={true}
              label="Title"
              maxLength={100}
              onChange={[Function]}
              placeholder="Title"
              required={true}
              value=""
            />
            <FormInput
              as={[Function]}
              control={[Function]}
              error={false}
              fluid={true}
              label="Artist"
              maxLength={100}
              onChange={[Function]}
              placeholder="Artist"
              required={true}
              value=""
            />
            <FormInput
              as={[Function]}
              control={[Function]}
              error={false}
              fluid={true}
              label="Album"
              maxLength={100}
              onChange={[Function]}
              placeholder="Album"
              required={true}
              value=""
            />
            <FormInput
              as={[Function]}
              control={[Function]}
              error={false}
              fluid={true}
              label="Genre"
              maxLength={100}
              onChange={[Function]}
              placeholder="Genre"
              required={true}
              value=""
            />
            <FormTextArea
              as={[Function]}
              control={[Function]}
              error={false}
              label="Description"
              onChange={[Function]}
              placeholder="Description"
              required={true}
              value=""
            />
          </Form>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "form",
            "children": Array [
              <Message
                content="Please fill in all required fields before submitting the form again."
                error={true}
                header="Unable to add song"
              />,
              <FormField
                control={[Function]}
                label="Rating"
                onClick={[Function]}
              />,
              <FormInput
                as={[Function]}
                control={[Function]}
                error={false}
                fluid={true}
                label="Title"
                maxLength={100}
                onChange={[Function]}
                placeholder="Title"
                required={true}
                value=""
              />,
              <FormInput
                as={[Function]}
                control={[Function]}
                error={false}
                fluid={true}
                label="Artist"
                maxLength={100}
                onChange={[Function]}
                placeholder="Artist"
                required={true}
                value=""
              />,
              <FormInput
                as={[Function]}
                control={[Function]}
                error={false}
                fluid={true}
                label="Album"
                maxLength={100}
                onChange={[Function]}
                placeholder="Album"
                required={true}
                value=""
              />,
              <FormInput
                as={[Function]}
                control={[Function]}
                error={false}
                fluid={true}
                label="Genre"
                maxLength={100}
                onChange={[Function]}
                placeholder="Genre"
                required={true}
                value=""
              />,
              <FormTextArea
                as={[Function]}
                control={[Function]}
                error={false}
                label="Description"
                onChange={[Function]}
                placeholder="Description"
                required={true}
                value=""
              />,
            ],
            "error": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "content": "Please fill in all required fields before submitting the form again.",
                "error": true,
                "header": "Unable to add song",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "control": [Function],
                "label": "Rating",
                "onClick": [Function],
                "rating": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": [Function],
                "control": [Function],
                "error": false,
                "fluid": true,
                "label": "Title",
                "maxLength": 100,
                "onChange": [Function],
                "placeholder": "Title",
                "required": true,
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": [Function],
                "control": [Function],
                "error": false,
                "fluid": true,
                "label": "Artist",
                "maxLength": 100,
                "onChange": [Function],
                "placeholder": "Artist",
                "required": true,
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": [Function],
                "control": [Function],
                "error": false,
                "fluid": true,
                "label": "Album",
                "maxLength": 100,
                "onChange": [Function],
                "placeholder": "Album",
                "required": true,
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": [Function],
                "control": [Function],
                "error": false,
                "fluid": true,
                "label": "Genre",
                "maxLength": 100,
                "onChange": [Function],
                "placeholder": "Genre",
                "required": true,
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": [Function],
                "control": [Function],
                "error": false,
                "label": "Description",
                "onChange": [Function],
                "placeholder": "Description",
                "required": true,
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Button
              as="button"
              color="red"
              content="Cancel"
              role="button"
            />,
            <Button
              as="button"
              color="blue"
              content="Save"
              onClick={[Function]}
              role="button"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "button",
              "color": "red",
              "content": "Cancel",
              "onClick": undefined,
              "role": "button",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "button",
              "color": "blue",
              "content": "Save",
              "onClick": [Function],
              "role": "button",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "centered": true,
        "children": Array [
          <Header
            content="Add song"
          />,
          <ModalContent>
            <Form
              as="form"
              error={false}
            >
              <Message
                content="Please fill in all required fields before submitting the form again."
                error={true}
                header="Unable to add song"
              />
              <FormField
                control={[Function]}
                label="Rating"
                onClick={[Function]}
              />
              <FormInput
                as={[Function]}
                control={[Function]}
                error={false}
                fluid={true}
                label="Title"
                maxLength={100}
                onChange={[Function]}
                placeholder="Title"
                required={true}
                value=""
              />
              <FormInput
                as={[Function]}
                control={[Function]}
                error={false}
                fluid={true}
                label="Artist"
                maxLength={100}
                onChange={[Function]}
                placeholder="Artist"
                required={true}
                value=""
              />
              <FormInput
                as={[Function]}
                control={[Function]}
                error={false}
                fluid={true}
                label="Album"
                maxLength={100}
                onChange={[Function]}
                placeholder="Album"
                required={true}
                value=""
              />
              <FormInput
                as={[Function]}
                control={[Function]}
                error={false}
                fluid={true}
                label="Genre"
                maxLength={100}
                onChange={[Function]}
                placeholder="Genre"
                required={true}
                value=""
              />
              <FormTextArea
                as={[Function]}
                control={[Function]}
                error={false}
                label="Description"
                onChange={[Function]}
                placeholder="Description"
                required={true}
                value=""
              />
            </Form>
          </ModalContent>,
          <ModalActions>
            <Button
              as="button"
              color="red"
              content="Cancel"
              role="button"
            />
            <Button
              as="button"
              color="blue"
              content="Save"
              onClick={[Function]}
              role="button"
            />
          </ModalActions>,
        ],
        "closeOnDimmerClick": true,
        "closeOnDocumentClick": false,
        "dimmer": true,
        "eventPool": "Modal",
        "onClose": undefined,
        "open": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "content": "Add song",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Form
              as="form"
              error={false}
            >
              <Message
                content="Please fill in all required fields before submitting the form again."
                error={true}
                header="Unable to add song"
              />
              <FormField
                control={[Function]}
                label="Rating"
                onClick={[Function]}
              />
              <FormInput
                as={[Function]}
                control={[Function]}
                error={false}
                fluid={true}
                label="Title"
                maxLength={100}
                onChange={[Function]}
                placeholder="Title"
                required={true}
                value=""
              />
              <FormInput
                as={[Function]}
                control={[Function]}
                error={false}
                fluid={true}
                label="Artist"
                maxLength={100}
                onChange={[Function]}
                placeholder="Artist"
                required={true}
                value=""
              />
              <FormInput
                as={[Function]}
                control={[Function]}
                error={false}
                fluid={true}
                label="Album"
                maxLength={100}
                onChange={[Function]}
                placeholder="Album"
                required={true}
                value=""
              />
              <FormInput
                as={[Function]}
                control={[Function]}
                error={false}
                fluid={true}
                label="Genre"
                maxLength={100}
                onChange={[Function]}
                placeholder="Genre"
                required={true}
                value=""
              />
              <FormTextArea
                as={[Function]}
                control={[Function]}
                error={false}
                label="Description"
                onChange={[Function]}
                placeholder="Description"
                required={true}
                value=""
              />
            </Form>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "form",
              "children": Array [
                <Message
                  content="Please fill in all required fields before submitting the form again."
                  error={true}
                  header="Unable to add song"
                />,
                <FormField
                  control={[Function]}
                  label="Rating"
                  onClick={[Function]}
                />,
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  error={false}
                  fluid={true}
                  label="Title"
                  maxLength={100}
                  onChange={[Function]}
                  placeholder="Title"
                  required={true}
                  value=""
                />,
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  error={false}
                  fluid={true}
                  label="Artist"
                  maxLength={100}
                  onChange={[Function]}
                  placeholder="Artist"
                  required={true}
                  value=""
                />,
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  error={false}
                  fluid={true}
                  label="Album"
                  maxLength={100}
                  onChange={[Function]}
                  placeholder="Album"
                  required={true}
                  value=""
                />,
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  error={false}
                  fluid={true}
                  label="Genre"
                  maxLength={100}
                  onChange={[Function]}
                  placeholder="Genre"
                  required={true}
                  value=""
                />,
                <FormTextArea
                  as={[Function]}
                  control={[Function]}
                  error={false}
                  label="Description"
                  onChange={[Function]}
                  placeholder="Description"
                  required={true}
                  value=""
                />,
              ],
              "error": false,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "content": "Please fill in all required fields before submitting the form again.",
                  "error": true,
                  "header": "Unable to add song",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "control": [Function],
                  "label": "Rating",
                  "onClick": [Function],
                  "rating": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": [Function],
                  "control": [Function],
                  "error": false,
                  "fluid": true,
                  "label": "Title",
                  "maxLength": 100,
                  "onChange": [Function],
                  "placeholder": "Title",
                  "required": true,
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": [Function],
                  "control": [Function],
                  "error": false,
                  "fluid": true,
                  "label": "Artist",
                  "maxLength": 100,
                  "onChange": [Function],
                  "placeholder": "Artist",
                  "required": true,
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": [Function],
                  "control": [Function],
                  "error": false,
                  "fluid": true,
                  "label": "Album",
                  "maxLength": 100,
                  "onChange": [Function],
                  "placeholder": "Album",
                  "required": true,
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": [Function],
                  "control": [Function],
                  "error": false,
                  "fluid": true,
                  "label": "Genre",
                  "maxLength": 100,
                  "onChange": [Function],
                  "placeholder": "Genre",
                  "required": true,
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": [Function],
                  "control": [Function],
                  "error": false,
                  "label": "Description",
                  "onChange": [Function],
                  "placeholder": "Description",
                  "required": true,
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Button
                as="button"
                color="red"
                content="Cancel"
                role="button"
              />,
              <Button
                as="button"
                color="blue"
                content="Save"
                onClick={[Function]}
                role="button"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": "button",
                "color": "red",
                "content": "Cancel",
                "onClick": undefined,
                "role": "button",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": "button",
                "color": "blue",
                "content": "Save",
                "onClick": [Function],
                "role": "button",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
